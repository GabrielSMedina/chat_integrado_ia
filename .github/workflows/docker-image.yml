name: Deploy to Cloud Run

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  DOCKER_IMAGE: us-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_REPOSITORY }}/${{ github.event.repository.name }}:${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      deployments: write
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run unit tests
      run: npx vitest run

    - name: Debug Secrets and Image
      run: |
        # Imprime os primeiros 50 caracteres do segredo GCP_SA_KEY (para verificar se não está vazio ou truncado)
        echo "GCP_SA_KEY (partial): ${{ secrets.GCP_SA_KEY && format('{0}...', substring(secrets.GCP_SA_KEY, 0, 50)) }}"
        echo "GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}"
        echo "GCP_REPOSITORY: ${{ secrets.GCP_REPOSITORY }}"
        echo "DOCKER_IMAGE: ${{ env.DOCKER_IMAGE }}"

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up gcloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Build Docker image
      run: |
        docker build \
          --build-arg OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
          --build-arg NODE_ENV=production \
          -t us-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_REPOSITORY }}/${{ github.event.repository.name }}:${{ github.sha }} .

    - name: Push Docker image
      run: |
        docker push ${{ env.DOCKER_IMAGE }}

    - name: Create .env.prod file
      run: |
        cat <<EOF > .env.prod
        GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
        NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
        NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}
        DATABASE_URL=${{ secrets.DATABASE_URL }}
        OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
        NODE_ENV=production
        EOF

    - name: Deploy to Cloud Run
      if: github.event_name != 'pull_request'
      run: |
        gcloud run deploy ${{ secrets.GCP_SERVICE_NAME }} \
          --image ${{ env.DOCKER_IMAGE }} \
          --region ${{ secrets.GCP_REGION }} \
          --platform managed \
          --project ${{ secrets.GCP_PROJECT_ID }} \
          --allow-unauthenticated \
          --env-vars-file .env.prod
